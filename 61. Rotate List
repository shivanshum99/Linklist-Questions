class Solution {
public:
    int getLength(ListNode* head){
        int len = 0;
        ListNode* p = head;
        while(p!=NULL){
            len++;
            p = p->next;
        }
        return len;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || head->next == NULL){
            return head;
        }

        int len = getLength(head);
        int actualRotateK = k%len;

        if(actualRotateK == 0){
            return head;
        }

        int newLastNodePos = len - actualRotateK - 1;
        ListNode* newHead = nullptr;
        ListNode* newLastNode = head;

        for(int i = 0;i<newLastNodePos;i++){
            newLastNode = newLastNode->next;
        }

        newHead = newLastNode->next;
        ListNode* it = newHead;
        
        while(it->next!=NULL){
            it = it->next;
        }

        it->next = head;

        newLastNode->next = NULL;

        return newHead;
    }
};
